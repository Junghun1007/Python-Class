1. round() # 소수점 반올림 함수
  ex)
    print(round(4.78,1)) # 소수점 첫째 자리까지 표현
    
2. range() # list의 범위 지정
  ex)
    list1 =[1,2,3,4,5,6,7,8,9,10]
    print(list1)

    list2 = list(range(1,11,1))
    print(list2)

    list3 = list(range(4,15)) # step 기본값 1
    print(list3)

    list4 = list(range(5)) # begin 기본값 0
    print(list4)
    
3. 문자열 스플릿 
  ex)
    s = "python"

    print(s[2:5:1])
    print(s[1:4]) # step 생략시 1로 출력
    print(s[3:]) # end, step 생략시 begin부터 끝까지 출력
    
4. find(), rfind(), index() # 문자열 내부의 특정문자의 인덱스 검색
   ex)
    s = "python programming"

    print(s.find("o"))
    print(s.rfind("o"))         # 뒤에서부터 탐색
    print(s.find("program"))    # 해당 단어의 첫글자 인덱스 반환
    print(s.find("메롱"))       # -1 
    
5. count() # 문자열 내부의 특정단어 빈도수 반환
   ex)
    message = """ 생각이라는 생각은 생각하면 생각할수록 자꾸 생각이 나는 생각이기 때문에
    생각이라는 생각은 아예 생각하지 않는 생각이 가장 좋은 생각이라고 생각한다."""

    print(message.count("생각"))
    
    
6. is가 붙으면 true, false를 반환
   isdecimal() : 모든 문자가 숫자 형태인지를 검사
   isalpha() : 모든 문자가 영문 알파벳 인지를 검사
   islower() : 모든 문자가 영문 소문자 인지를 검사
   isupper() : 모든 문자가 영문 대문자 인지를 검사
    
7. replace() # 특정단어를 찾아 새로운 단어로 대체,
  * 원래 문자열을 바꾸진 않는다.
  ex)
    s1 = "파이썬 프로그래밍!!! 파이썬은 문자열을 관리하는\
    수많은 메서드를 제공합니다!!! 파이썬 짱짱!!!"
    print(s1)
    print(s1.replace("파이썬","python"))

8. trip이 붙으면 공백제거
   lstrip() : 문자열의 왼쪽 공백만 제거
   rstrip() : 문자열의 오른쪽 공백만 제거
   strip() : 문자열의 양쪽 공백만 제거
  ex)
    user_id = input("아이디 : ").strip()
    
9. 문자열 알파벳 형태 변경
   lower() : 영문 알파벳을 모두 소문자로 변환
   upper() : 영문 알파벳을 모두 대문자로 변환
   swapcase() : 영문 대소문자를 각각 반전
   capitalize() : 문장의 맨 첫글자만 대문자로, 나머지는 소문자로 변환
   title() : 각 단어의 맨 첫글자만 대문자로, 나머지는 소문자로 변환
  ex)
    s = "SElf MaDeoRanGe GOodTime"

    print(s)
    print(s.lower())
    print(s.upper())
    print(s.swapcase() )
    print(s.capitalize())
    print(s.title())
    
10. split() # 구분자를 기준으로 문자열을 분할해 리스트에 담아 '반환'
  ex)
    s3 = "홍길동 | 대한출판사 | 2020년 10월"
    
    data = s3.split(" | ",2) # data라는 리스트 생성
    print(data[0])
    print(data[1])
    print(data[2])
    
11. len(), max(), min() # 리스트 함수
  ex)
     print("학생 수는 %d명 입니다." % len(points))
     print("최고 점수는 %d점 입니다." % max(points))
     print("최저 점수는 %d점 입니다." % min(points))
    
12. 리스트 인덱싱
  ex)
    pokemon = ['피카츄','라이츄','파이리', '꼬부기','버터풀']

    print(type(pokemon))
    
    print(pokemon[2])
    print(pokemon[1][2])  # [라이츄][츄]
    print(pokemon[4][:2])
    
13. 리스트 슬라이싱
  ex)
    nums = [0,1,2,3,4,5,6,7,8,9]

    print(nums[2:5:1])
    print(nums[:4])
    print(nums[1:7:2])
    
14. 리스트 unpackaging
  ex)
     pokemon = ['피카츄','라이츄','파이리', '꼬부기','버터풀']
     p, r ,c ,s ,b = pokemon 
     print(p, r ,c ,s ,b)
     
15. 리스트 삭제
    remove() : 삭제할 값을 직접 지정하여 삭제
    del() : 삭제할 요소의 인덱스를 통해 삭제
    clear() : 리스트 내부 전체 요소 삭제
   ex)
      points = [88,99,56,92,100,78]

      print(points)

      points.remove(92)
      print(points)

      del(points[0])
      print(points)
      
16. 리스트 탐색 ,정렬
  index() : 리스트에서 특정 값이 저장된 인덱스를 반환
  count() : 리스트 내부에 저장된 특정 요소의 개수를 반환
  sort() : 리스트를 오름차 정렬
  reverse() : 리스트 데이터를 역순으로 배치
  ex)
    list.index(value)
    list.count(value)
    list.sort()
    list.reverse()
  
