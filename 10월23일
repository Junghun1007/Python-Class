
---------------------------------- 반복문


'''

* 반복문 (loop)

 - 유사한 명령을 반복해서 실행하는 제어문입니다. 

 - 파이썬의 반복문 키워드는 while, for ~ in이 있습니다.

* while 

 - 제어변수 선언 (반복문의 횟수 설정)
 - 논리형 조건식 (반복문의 끝을 지정)
 - 반복실행할 코드 
 - 제어변수의 증감식 (반복문의 종료를 위해 제어변수의 값을 조정.)

Ex)
    i = 0
    while i < 10:
        print("Hello World")
        i+=1
'''


# 1~10 까지의 누적합을 구하는 로직

n=1
a = 0
while n<=10:
    a = a + n
    n+=1
    
print("1~10의 합은 : ", a)


-------------------------- quiz (1)

# 7부터 200까지의 정수 중 7의 배수만 가로로 출력해 보세요

i = 7
while i < 200:
    # if i%7 == 0:
        print(i , end =" ") 
    i+=7                # i+=1


--------------------------- quiz (2)
# 1~100까지의 정수중에 4의 배수이면서 8의배수는 아닌수를 모두 가로로 출력

i = 1 

while i <= 100:
    if i%4 == 0:
        if i%8 != 0:
            print(i, end = " ")
    i+=1

---------------------------- quiz (3)

# 1 ~ 30000 사이의 정수 중 258의 배수의 개수를 출력


i = 1
count = 0
while i <= 30000:
    if i % 258 == 0:
        count+=1
    i+=1

print("258의 배수의 개수 : ", count)


# 1 ~ 30000 사이의 정수 중 258의 배수의 개수를 출력 (2)

n = 258
i = 1
count2 = 0

while n*i <= 30000:
    count2+=1
    i+=1
print("258의 배수의 개수 : ", count2)


--------------------------------- quiz (4)

# 구구단 출력 

while 1:
    n = int(input("정수를 입력하세요 : "))
    i = 1
    while i <= 9:
         print(n, "X",i ,"=", n*i)
        i+=1
 
 
 -------------------------------- quiz (5)
 # 소수 판별하는 로직 작성
 
 while 1:
    num = int(input("정수를 입력하세요 : "))
    i = 2
    count = 1

    while i <= num:
      if num % i  == 0:
          count+=1
      i+=1

    if count == 2 :
       print("소수 입니다.")
    else:
        print("소수가 아닙니다. ")
        
 # 소수 판별하는 로직 작성 (2) 
    
  num = int(input("정수를 입력하세요 : "))
  j = 2

  while num % j !=0:
      j+=1

  if num == j:
      print("소수 입니다.")
  else:
       print("소수가 아닙니다. ")

 

 
 ---------------------------------- quiz (6)
 
x = int(input(" x를 입력하세요 : "))
y = int(input(" y를 입력하세요 : "))

if x > y:      
    n = x      #   x , y = y , x
    x = y
    y = n

i = x
count = 0
while i <= y:
    count += i
    i+=1

print(x,"부터",y,"까지의 누적합계 :", count)



---------------------------- 반복문 (for~in)

'''
* 반복문 (for ~ in)

 - for 문은 시퀀스 자료형 내부의 데이터를 순차적으로 꺼내서 반복 작업을
    수행하는 반복문

 - 시퀀스 자료형이란 여러 개의 값들을 모아놓은 집합형태로 리스트, 문자열
    등이 있다.
 for 제어변수 in 시퀀스 자료형
    반복실행문

'''


for num in [1,2,3,4,5,6,7,8,9,10]:
    print("반복문 실행", num)

total = 0   
for n in [1,2,3,4,5,6,7,8,9,10]:
    total += n
print(total)


'''
* 내장함수 range()

- 순차적으로 증가하는 정수의 자료형을 만들때 한계가 있기때문에, range
    함수를 이용하여 쉽게 범위를 생성할 수 있다.

Ex) range(begin, end, step)

 - begin은 값이 포함 (<=)
 - end는 값이 미포함 (<)

'''

list1 =[1,2,3,4,5,6,7,8,9,10]
print(list1)

list2 = list(range(1,11,1))
print(list2)

list3 = list(range(4,15)) # step 기본값 1
print(list3)

list4 = list(range(5)) # begin 기본값 0
print(list4)


total = 0
for n in range(101):
    total += n
print("1~100까지의 총합 : ",total,sep="")
  


