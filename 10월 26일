------------------------- quiz (1)

# 7~200까지의 정수중 7의배수 출력

for i in range(7,201,7):

    print(i," ",end = "")
    
    
-------------------------- quiz (2)

# 1~100정수 중 6의 배수이면서 12의배수가 아닌수 출력

for n in range(1,101):
    if(n%6 == 0):
        if(n%12 != 0):
            print(n," ", end = "")

-------------------------- quiz (3)

# # 1~9876사이의 정수중 13의 배수의 개수를 출력

count = 0
for n in range(13,9877,13):
    count += 1

print("13의 배수개수 : ",count)

---------------------------  반복문 중첩

'''
* 반복문 중첩
 - 외부 반복문 안에 내부 반복문이 존재하는 형태를 반복문
    중첩이라고 합니다.
 - 반복문 자체를 반복해야 할 경우 많이 사용됩니다.
 
'''

# 구구단 출력

for dan in range(2,10):
    print("# 구구단", dan ,"단")
    print("-"*30)
    for hang in range(1, 10):
        print(dan, "x",hang,"=",dan*hang)
        


--------------------------- quiz (4)
# 정수를 입력받아 1~해당 수까지 모든 소수를 가로로 출력, 그 소수의 개수를 출력


count = 0
n = int(input("정수를 입력하세요 : "))

for i in range(2 , n+1):
    t = 0       # 소수판별계수 초기화
    for j in range(1 ,i+1):
        if i%j == 0:
            t+=1

    if t == 2:
        count+=1
        print(i ," ",end = "")

print("\n")
print("소수의 개수는 : ", count)

---------------------------------- quiz (5)
(1)
'''
*
**
***
****
*****
'''

for x in range(1,6): 
    for y in range(1,x+1):
        print("*",end ="")
    print("\n")

(2)
'''
*****
****
***
**
*
'''

for x in range(1,6):
    for y in range(0,6-x): 
        print("*",end ="")
    print("\n")

(3)
'''
    * 4 1
   ** 3 2
  *** 2 3
 **** 1 4
***** 0 5
'''

for x in range(1,6):
    for y in range(5-x):
        print(" ",end ="")
    for z in range(x):
        print("*",end ="")
    print("\n")

(4)
'''
*****
 ****
  ***
   **
    *
'''

for x in range(1,6):
    for y in range(1,x):
         print(" ",end ="")
    for z in range(6-x):
        print("*",end ="")
    print("\n")
    
(5)

'''
    *       1 
   ***      3 
  *****     5 
 *******    7 
*********   9
'''

for x in range(1,6):
    for y in range(1,6-x):
         print(" ",end ="")
    for z in range(2*x-1): # 홀수
        print("*",end ="")
    print("\n")

(6)

''' 
*********
 *******
  *****
   ***
    *
'''
for x in range(1,6):
     for y in range(x-1):
        print(" ",end ="")
     for z in range(10 - (2*x-1)):
        print("*",end ="")
     print("\n")
     
     
------------------------------ 탈출문

'''
 * 탈출문(흐름 제어문) - break, continue, return
 
 - 반복문은 조건을 만족하는 동안 계속 반복 실행하기 때문에
    시작되면 멈추지 않고 반복을 실행.
 - 하지만 실행 도중 중지해야 하거나 건너뛰어야 할 경우
    탈출문을 사용한다.

 ******************************* break
 
  - 현재 반복문을 즉시 종료시키고 탈출한다.
  - 특정 조건 하에 종료 시키므로 if와 함께사용함.
  
  ---------------------------- 무한 루프

'''
 * 무한 루프
 - 무한 루프는 반복횟수를 정하지 않고 특정 조건을 통해 종료될 수 있도록 설계한 루프
 - 파이썬의 무한 루프는 while 문으로만 작성이 가능하며 for문으로는 작성할 수없다.
 - 일반적으로 반복 횟수를 알고 있다면 for문을 반복 횟수를 모른다면 while을 통한 무한루프를 형성하여 생성한다.
    ex) while true:
            if 종료조건:
                break

'''

print("먹고 싶은 음식을 입력하세요 : ")
print("중지하려면 '그만'이라고 입력하세요")

while True:
    food = input("")
    if food == '그만':
        print("입력을 종료합니다.")
        break
------------------------------- quiz (6)

#  사용자에게 문제를 낸후 정답체크, 시도횟수 출력      
 count = 1
while True:
    print("38 * 12의 값은 : ", end="")
    n = int(input(""))

    if n == 456:
        print("정답입니다. ",count,"번 만에 맞추셨네요.")
        break
    else:
        print("틀렸습니다.\n")
        count+=1       

 ************************************** continue
 
 - 이번 반복은 생략하고 다음 반복으로 건너뛰는 탈출문.

  while True:
    n = int(input("점수를 입력하세요 : "))
    if n == 1:
        print("프로그램 종료.")
        break
    elif n == 0:
        print("다른 숫자를 입력해주세요.")
        continue
    print("출력 결과 : ", 10/n)

'''


    

        
        
        
        
        
        
        
        
        
        
